% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{knn}
\alias{knn}
\title{Classify target set using K Nearest Neighbours}
\usage{
knn(training_set, predict_set, predict_param,
  predict_param_type = "numeric", k = round(sqrt(nrow(training_set))),
  metric = "hassanat", weighting_scheme = "inverted")
}
\arguments{
\item{training_set}{data frame or numeric matrix - training dataset.}

\item{predict_set}{data frame or numeric matrix (same as training_set) - prediction dataset.}

\item{predict_param}{numeric. Index of parameter to predict values of.}

\item{predict_param_type}{"numeric" or "character". If predict_param values are strings, then choose "character" to save it in predict_set
as such.}

\item{k}{number of nearest neighbours to use for prediction or character string "all".
Default: square root of number of observations in training_set.}

\item{metric}{character string giving a method for computing distances between vectors. One of:
"hassanat" (default), "canberra", "chebyshev", "chi_squared", "cosine", "euclidean", "euclidean_normalized", "euclidean_standarized",
"hamming", "mahalanobis", "manhattan", "pearson", "spearman".}

\item{weighting_scheme}{character string giving a method for weighting k nearest neighbours. One of:
"inverted" (default), "constant", "inverted_logarythmic".}
}
\value{
predict_set with predicted values of predict_param (with same column type as in training_set).
}
\description{
Uses provided training set to predict values of given prediction parameter in target set.
The precision of algorithm varies greatly, depending on parameters.
}
